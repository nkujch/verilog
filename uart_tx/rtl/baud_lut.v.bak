module baud_lut(
	clk,
	reset_n,
	baud_set,
	clk_baud);
	//step-1: IO ports
	//input ports
	input clk;
	input reset_n;
	input [2:0] baud_set;
	//output ports
	output clk_baud;
	//reg or wire
	reg [19:0] count;
	reg [19:0] Bps_count;
	
	//step-2: logic
	//counter
	always @ (posedge clk or negedge reset_n) begin
		if(!reset_n)
			count <= Bps_count;
	end
	//baud_set
	//Bps:        300,     1200,   2400,   9600,  19200, 115200
	//Bps_count:  166_667, 41_667, 20_833, 5_208, 2_604, 434
	always @ (baud_set) begin
		case(baud_set)
			3'b000: Bps_count <= 20'd166_667;
			3'b001: Bps_count <= 20'd41_667;
			3'b010: Bps_count <= 20'd20_833;
			3'b011: Bps_count <= 20'd5_208;
			3'b100: Bps_count <= 20'd2_604;
			3'b101: Bps_count <= 20'd434;
			default: Bps_count <= 20'd166_667;
		endcase
	end
	
	//step-3: output


endmodule
